@page
@model EVDealerSales.Presentation.Pages.Manager.ManageReportModel
@{
    ViewData["Title"] = "Reports & Analytics";
}

@section Styles {
    <link rel="stylesheet" href="~/css/staff-management.css" />
}

<div class="staff-page-clean">
    <div class="container">
        <!-- Header -->
        <div class="staff-header-clean">
            <div style="display: flex; justify-content: space-between; align-items: start;">
                <div>
                    <h1 class="staff-title-clean">
                        <i class="bi bi-bar-chart-line"></i>
                        Reports & Analytics
                    </h1>
                    <p class="staff-subtitle-clean">
                        Comprehensive business insights and performance metrics
                    </p>
                </div>
            </div>
        </div>

        <!-- Key Metrics Cards -->
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1.5rem; margin-bottom: 2rem;">
            <!-- Total Revenue -->
            <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 12px; padding: 1.5rem; color: white; position: relative; overflow: hidden;">
                <div style="position: absolute; top: -20px; right: -20px; font-size: 5rem; opacity: 0.2;">
                    <i class="bi bi-currency-dollar"></i>
                </div>
                <div style="position: relative; z-index: 1;">
                    <div style="font-size: 0.75rem; text-transform: uppercase; letter-spacing: 1px; opacity: 0.9; margin-bottom: 0.5rem;">Total Revenue</div>
                    <div style="font-size: 2rem; font-weight: 700; margin-bottom: 0.25rem;">$@Model.TotalRevenue.ToString("N0")</div>
                    <div style="font-size: 0.75rem; opacity: 0.8;">All time confirmed orders</div>
                </div>
            </div>

            <!-- Total Orders -->
            <div style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); border-radius: 12px; padding: 1.5rem; color: white; position: relative; overflow: hidden;">
                <div style="position: absolute; top: -20px; right: -20px; font-size: 5rem; opacity: 0.2;">
                    <i class="bi bi-cart-check"></i>
                </div>
                <div style="position: relative; z-index: 1;">
                    <div style="font-size: 0.75rem; text-transform: uppercase; letter-spacing: 1px; opacity: 0.9; margin-bottom: 0.5rem;">Total Orders</div>
                    <div style="font-size: 2rem; font-weight: 700; margin-bottom: 0.25rem;">@Model.TotalOrders</div>
                    <div style="font-size: 0.75rem; opacity: 0.8;">@Model.PendingOrders pending</div>
                </div>
            </div>

            <!-- Total Customers -->
            <div style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); border-radius: 12px; padding: 1.5rem; color: white; position: relative; overflow: hidden;">
                <div style="position: absolute; top: -20px; right: -20px; font-size: 5rem; opacity: 0.2;">
                    <i class="bi bi-people"></i>
                </div>
                <div style="position: relative; z-index: 1;">
                    <div style="font-size: 0.75rem; text-transform: uppercase; letter-spacing: 1px; opacity: 0.9; margin-bottom: 0.5rem;">Total Customers</div>
                    <div style="font-size: 2rem; font-weight: 700; margin-bottom: 0.25rem;">@Model.TotalCustomers</div>
                    <div style="font-size: 0.75rem; opacity: 0.8;">+@Model.NewCustomersThisMonth this month</div>
                </div>
            </div>

            <!-- Test Drives -->
            <div style="background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%); border-radius: 12px; padding: 1.5rem; color: white; position: relative; overflow: hidden;">
                <div style="position: absolute; top: -20px; right: -20px; font-size: 5rem; opacity: 0.2;">
                    <i class="bi bi-car-front"></i>
                </div>
                <div style="position: relative; z-index: 1;">
                    <div style="font-size: 0.75rem; text-transform: uppercase; letter-spacing: 1px; opacity: 0.9; margin-bottom: 0.5rem;">Test Drives</div>
                    <div style="font-size: 2rem; font-weight: 700; margin-bottom: 0.25rem;">@Model.TotalTestDrives</div>
                    <div style="font-size: 0.75rem; opacity: 0.8;">@Model.TestDriveConversionRate.ToString("F1")% conversion</div>
                </div>
            </div>

            <!-- Average Order Value -->
            <div style="background: linear-gradient(135deg, #fa709a 0%, #fee140 100%); border-radius: 12px; padding: 1.5rem; color: white; position: relative; overflow: hidden;">
                <div style="position: absolute; top: -20px; right: -20px; font-size: 5rem; opacity: 0.2;">
                    <i class="bi bi-graph-up"></i>
                </div>
                <div style="position: relative; z-index: 1;">
                    <div style="font-size: 0.75rem; text-transform: uppercase; letter-spacing: 1px; opacity: 0.9; margin-bottom: 0.5rem;">Avg Order Value</div>
                    <div style="font-size: 2rem; font-weight: 700; margin-bottom: 0.25rem;">$@Model.AverageOrderValue.ToString("N0")</div>
                    <div style="font-size: 0.75rem; opacity: 0.8;">Per confirmed order</div>
                </div>
            </div>

            <!-- On-Time Delivery -->
            <div style="background: linear-gradient(135deg, #30cfd0 0%, #330867 100%); border-radius: 12px; padding: 1.5rem; color: white; position: relative; overflow: hidden;">
                <div style="position: absolute; top: -20px; right: -20px; font-size: 5rem; opacity: 0.2;">
                    <i class="bi bi-truck"></i>
                </div>
                <div style="position: relative; z-index: 1;">
                    <div style="font-size: 0.75rem; text-transform: uppercase; letter-spacing: 1px; opacity: 0.9; margin-bottom: 0.5rem;">On-Time Delivery</div>
                    <div style="font-size: 2rem; font-weight: 700; margin-bottom: 0.25rem;">@Model.OnTimeDeliveryRate.ToString("F1")%</div>
                    <div style="font-size: 0.75rem; opacity: 0.8;">@Model.ActiveDeliveries active deliveries</div>
                </div>
            </div>
        </div>

        <!-- Charts Row 1 -->
        <div style="display: grid; grid-template-columns: 2fr 1fr; gap: 1.5rem; margin-bottom: 1.5rem;">
            <!-- Revenue Trend Chart -->
            <div class="staff-card-clean">
                <div class="staff-card-header-clean">
                    <h3 class="staff-card-title-clean">
                        <i class="bi bi-graph-up-arrow"></i>
                        Revenue Trend (Last 6 Months)
                    </h3>
                </div>
                <div class="staff-card-body-clean">
                    <canvas id="revenueChart" height="80"></canvas>
                </div>
            </div>

            <!-- Orders by Status Chart -->
            <div class="staff-card-clean">
                <div class="staff-card-header-clean">
                    <h3 class="staff-card-title-clean">
                        <i class="bi bi-pie-chart"></i>
                        Orders by Status
                    </h3>
                </div>
                <div class="staff-card-body-clean">
                    <canvas id="ordersStatusChart" height="160"></canvas>
                </div>
            </div>
        </div>

        <!-- Charts Row 2 -->
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1.5rem; margin-bottom: 1.5rem;">
            <!-- Top Selling Vehicles -->
            <div class="staff-card-clean">
                <div class="staff-card-header-clean">
                    <h3 class="staff-card-title-clean">
                        <i class="bi bi-trophy"></i>
                        Top Selling Vehicles
                    </h3>
                </div>
                <div class="staff-card-body-clean">
                    <canvas id="topVehiclesChart" height="100"></canvas>
                </div>
            </div>

            <!-- Delivery Status Chart -->
            <div class="staff-card-clean">
                <div class="staff-card-header-clean">
                    <h3 class="staff-card-title-clean">
                        <i class="bi bi-truck"></i>
                        Delivery Status
                    </h3>
                </div>
                <div class="staff-card-body-clean">
                    <canvas id="deliveryStatusChart" height="100"></canvas>
                </div>
            </div>
        </div>

        <!-- Inventory Alerts -->
        @if (Model.LowStockVehicles.Any() || Model.OutOfStockVehicles.Any())
        {
            <div class="staff-card-clean">
                <div class="staff-card-header-clean" style="background: rgba(239, 68, 68, 0.1); border-bottom-color: rgba(239, 68, 68, 0.3);">
                    <h3 class="staff-card-title-clean" style="color: #ef4444;">
                        <i class="bi bi-exclamation-triangle"></i>
                        Inventory Alerts
                    </h3>
                    <span style="color: #ef4444; font-size: 0.875rem; font-weight: 500;">
                        @(Model.OutOfStockCount + Model.LowStockCount) vehicles need attention
                    </span>
                </div>
                <div class="staff-card-body-clean">
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1.5rem;">
                        <!-- Out of Stock -->
                        @if (Model.OutOfStockVehicles.Any())
                        {
                            <div>
                                <h4 style="color: #ef4444; font-size: 0.9rem; margin-bottom: 1rem; display: flex; align-items: center; gap: 0.5rem;">
                                    <i class="bi bi-x-circle-fill"></i>
                                    Out of Stock (@Model.OutOfStockCount)
                                </h4>
                                @foreach (var vehicle in Model.OutOfStockVehicles)
                                {
                                    <div style="display: flex; align-items: center; gap: 1rem; padding: 0.75rem; background: rgba(239, 68, 68, 0.1); border-left: 3px solid #ef4444; border-radius: 6px; margin-bottom: 0.75rem;">
                                        <img src="@vehicle.ImageUrl" alt="@vehicle.ModelName" style="width: 60px; height: 60px; border-radius: 6px; object-fit: cover;">
                                        <div style="flex: 1;">
                                            <div style="font-weight: 600; color: #fff; font-size: 0.9rem;">@vehicle.ModelName @vehicle.TrimName</div>
                                            <div style="color: #ef4444; font-size: 0.8rem; font-weight: 600;">
                                                <i class="bi bi-box-seam"></i> @vehicle.Stock units
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }

                        <!-- Low Stock -->
                        @if (Model.LowStockVehicles.Any())
                        {
                            <div>
                                <h4 style="color: #f59e0b; font-size: 0.9rem; margin-bottom: 1rem; display: flex; align-items: center; gap: 0.5rem;">
                                    <i class="bi bi-exclamation-triangle-fill"></i>
                                    Low Stock (@Model.LowStockCount)
                                </h4>
                                @foreach (var vehicle in Model.LowStockVehicles)
                                {
                                    <div style="display: flex; align-items: center; gap: 1rem; padding: 0.75rem; background: rgba(245, 158, 11, 0.1); border-left: 3px solid #f59e0b; border-radius: 6px; margin-bottom: 0.75rem;">
                                        <img src="@vehicle.ImageUrl" alt="@vehicle.ModelName" style="width: 60px; height: 60px; border-radius: 6px; object-fit: cover;">
                                        <div style="flex: 1;">
                                            <div style="font-weight: 600; color: #fff; font-size: 0.9rem;">@vehicle.ModelName @vehicle.TrimName</div>
                                            <div style="color: #f59e0b; font-size: 0.8rem; font-weight: 600;">
                                                <i class="bi bi-box-seam"></i> @vehicle.Stock units left
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script>
        // Chart.js Configuration
        Chart.defaults.color = '#888';
        Chart.defaults.borderColor = '#1a1a1a';
        Chart.defaults.backgroundColor = '#0a0a0a';
        Chart.defaults.font.family = "'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif";

        // Revenue Trend Chart
        const revenueCtx = document.getElementById('revenueChart').getContext('2d');
        const revenueChart = new Chart(revenueCtx, {
            type: 'line',
            data: {
                labels: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.MonthlyRevenue.Select(m => m.MonthName))),
                datasets: [{
                    label: 'Revenue',
                    data: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.MonthlyRevenue.Select(m => m.Revenue))),
                    borderColor: '#0070f3',
                    backgroundColor: 'rgba(0, 112, 243, 0.1)',
                    borderWidth: 3,
                    fill: true,
                    tension: 0.4,
                    pointRadius: 5,
                    pointBackgroundColor: '#0070f3',
                    pointBorderColor: '#fff',
                    pointBorderWidth: 2,
                    pointHoverRadius: 7
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        backgroundColor: '#000',
                        titleColor: '#fff',
                        bodyColor: '#ccc',
                        borderColor: '#0070f3',
                        borderWidth: 1,
                        padding: 12,
                        displayColors: false,
                        callbacks: {
                            label: function(context) {
                                return 'Revenue: $' + context.parsed.y.toLocaleString();
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return '$' + value.toLocaleString();
                            }
                        },
                        grid: { color: '#1a1a1a' }
                    },
                    x: { grid: { display: false } }
                }
            }
        });

        // Orders by Status Chart (Only use Pending, Confirmed, Cancelled)
        const ordersStatusCtx = document.getElementById('ordersStatusChart').getContext('2d');
        const ordersStatusChart = new Chart(ordersStatusCtx, {
            type: 'doughnut',
            data: {
                labels: ['Pending', 'Confirmed', 'Cancelled'],
                datasets: [{
                    data: [
                        @(Model.OrdersByStatus.GetValueOrDefault(BusinessObject.Enums.OrderStatus.Pending, 0)),
                        @(Model.OrdersByStatus.GetValueOrDefault(BusinessObject.Enums.OrderStatus.Confirmed, 0)),
                        @(Model.OrdersByStatus.GetValueOrDefault(BusinessObject.Enums.OrderStatus.Cancelled, 0))
                    ],
                    backgroundColor: ['#f59e0b', '#0070f3', '#ef4444'],
                    borderWidth: 0,
                    hoverOffset: 10
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            padding: 15,
                            usePointStyle: true,
                            pointStyle: 'circle'
                        }
                    },
                    tooltip: {
                        backgroundColor: '#000',
                        titleColor: '#fff',
                        bodyColor: '#ccc',
                        borderColor: '#0070f3',
                        borderWidth: 1,
                        padding: 12
                    }
                }
            }
        });

        // Top Vehicles Chart
        const topVehiclesCtx = document.getElementById('topVehiclesChart').getContext('2d');
        const topVehiclesChart = new Chart(topVehiclesCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.TopSellingVehicles.Select(v => v.ModelName + " " + v.TrimName))),
                datasets: [{
                    label: 'Units Sold',
                    data: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.TopSellingVehicles.Select(v => v.UnitsSold))),
                    backgroundColor: '#0070f3',
                    borderRadius: 6,
                    barThickness: 40
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                indexAxis: 'y',
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        backgroundColor: '#000',
                        titleColor: '#fff',
                        bodyColor: '#ccc',
                        borderColor: '#0070f3',
                        borderWidth: 1,
                        padding: 12,
                        displayColors: false
                    }
                },
                scales: {
                    x: {
                        beginAtZero: true,
                        grid: { color: '#1a1a1a' }
                    },
                    y: { grid: { display: false } }
                }
            }
        });

        // Delivery Status Chart
        const deliveryStatusCtx = document.getElementById('deliveryStatusChart').getContext('2d');
        const deliveryStatusChart = new Chart(deliveryStatusCtx, {
            type: 'bar',
            data: {
                labels: ['Pending', 'Scheduled', 'In Transit', 'Delivered', 'Cancelled'],
                datasets: [{
                    label: 'Count',
                    data: [
                        @(Model.DeliveriesByStatus.GetValueOrDefault(BusinessObject.Enums.DeliveryStatus.Pending, 0)),
                        @(Model.DeliveriesByStatus.GetValueOrDefault(BusinessObject.Enums.DeliveryStatus.Scheduled, 0)),
                        @(Model.DeliveriesByStatus.GetValueOrDefault(BusinessObject.Enums.DeliveryStatus.InTransit, 0)),
                        @(Model.DeliveriesByStatus.GetValueOrDefault(BusinessObject.Enums.DeliveryStatus.Delivered, 0)),
                        @(Model.DeliveriesByStatus.GetValueOrDefault(BusinessObject.Enums.DeliveryStatus.Cancelled, 0))
                    ],
                    backgroundColor: ['#888', '#0070f3', '#f59e0b', '#22c55e', '#ef4444'],
                    borderRadius: 6
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        backgroundColor: '#000',
                        titleColor: '#fff',
                        bodyColor: '#ccc',
                        borderColor: '#0070f3',
                        borderWidth: 1,
                        padding: 12,
                        displayColors: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: { color: '#1a1a1a' }
                    },
                    x: { grid: { display: false } }
                }
            }
        });
    </script>
}
